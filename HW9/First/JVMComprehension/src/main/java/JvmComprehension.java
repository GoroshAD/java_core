// до выполнения main():
// выполняется загрузка классов в metaspace с помощью ClassLoader'ов, выгружаются:
// - JvmComprehension (наш класс);
// - String, Object, Integer, System (системные);

public class JvmComprehension {
    public static void main(String[] args) {   // при вызове создается фрейм main() в стеке
        int i = 1;                      // 1 создается новая запись в таблице локальных переменных фрейма main()
        Object o = new Object();        // 2 1) создается новый объект Object в куче;
                                        //   2) в таблицу локальных переменных фрейма main() добавляется переменная, ссылающаяся на этот объект в куче
        Integer ii = 2;                 // 3 1) автоматическая упаковка, строка преобразуется в Integer ii = Integer.valueOf(2);
                                        //   2) создания нового объекта в куче не будет, так как объект со значением 2 уже существует по умолчанию в кэше (там существуют значения от -127 до 128), и вернется ссылка на него;
                                        //   3) в таблицу локальных переменных фрейма main() добавляется переменная, ссылающаяся на этот объект;
        printAll(o, i, ii);             // 4 1) создается новый фрейм printAll() в стеке
        System.out.println("finished"); // 7 1) создается объект String со значением "finished" в куче;
                                        //   2) вызывается метод println, принимающий ссылку на объект из предыдущего пункта и выводящий его в консоль;
    } // метод завершает свою работу:
      // 1) удаляется фрейм main из стека, вместе с ним удаляется таблица локальных переменных этого фрейма;
      // 2) вызывается сборщик мусора;
      // 3) удаляются все объекты из кучи, ведь на них больше не остается ссылок;

    private static void printAll(Object o, int i, Integer ii) {   // в таблицу локальных переменных фрейма printAll() добавятся ссылки на объект кучи Object, ссылка на объект со значением 2 и объект кучи Integer;
        Integer uselessVar = 700;                   // 5 1) автоматическая упаковка, строка преобразуется в Integer uselessVar = Integer.valueOf(700);
                                                    //   2) значение объекта выходит за 128, то есть не хранится в кеше, значит создаётся новый объект Integer в куче;
                                                    //   3) в таблицу локальных переменных фрейма printAll() добавляется переменная, ссылающаяся на созданный объект;
        System.out.println(o.toString() + i + ii);  // 6 1) вызывается o.toString();
                                                    //   2) создается новый объект в куче String в качестве возвращаемого значения метода;
                                                    //   3) создается новый объект String в куче со значением i в строковом виде;
                                                    //   4) происходит конкатенация строк, создается новый объект String в куче со значением o.toString() + "i", где "i" - значение объекта String из предыдущего пункта;
                                                    //   5) создается новый объект String в куче со значением ii в строковом виде;
                                                    //   6) происходит конкатенация строк, создается новый объект String в куче со значением o.toString() + "i" + "ii", где "ii" - значение объекта String из предыдущего пункта;
                                                    //   7) вызывается метод println, принимающий ссылку на объект из предыдущего пункта и выводящий его в консоль;

    } // метод завершает свою работу:
      // 1) удаляется фрейм printAll из стека, вместе с ним удаляется таблица локальных переменных этого фрейма;
      // 2) вызывается сборщик мусора;
      // 3) удаляется объект Integer(700), так как на него не осталось ссылок;
      // 4) удаляются промежуточные объекты, созданные строкой System.out.println(o.toString() + i + ii);, ведь на них не осталось ссылок;
}

// Jvm завершает свою работу, перед завершением освобаждает всю выделенную память, стек, кучу и metaspace.